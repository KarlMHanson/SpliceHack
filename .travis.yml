language: c
matrix:
  include:
  - name: linux-xenial-gcc
    os: linux
    env: HINTS=linux LUA_VERSION=5.3.5
    compiler: gcc
    script:
    - cd sys/unix/ && sh setup.sh hints/$HINTS && cd ../../
    - make fetch-lua
    - test -d "lib/lua-$LUA_VERSION/src" || exit 0
    - make install
  - name: linux-bionic-gcc
    os: linux
    env: HINTS=linux LUA_VERSION=5.3.5
    dist: bionic
    compiler: gcc
    script:
    - cd sys/unix/ && sh setup.sh hints/$HINTS && cd ../../
    - make fetch-lua
    - test -d "lib/lua-$LUA_VERSION/src" || exit 0
    - make install
  - name: linux-xenial-clang
    os: linux
    env: HINTS=linux LUA_VERSION=5.3.5
    compiler: clang
    script:
    - cd sys/unix/ && sh setup.sh hints/$HINTS && cd ../../
    - make fetch-lua
    - test -d "lib/lua-$LUA_VERSION/src" || exit 0
    - make install
  - name: linux-xenial-gcc-x11
    os: linux
    env: HINTS=linux-x11 LUA_VERSION=5.3.5
    compiler: gcc
    addons:
      apt:
        packages:
        - libx11-dev
        - libxaw7-dev
        - xfonts-utils
    script:
    - cd sys/unix/ && sh setup.sh hints/$HINTS && cd ../../
    - make fetch-lua
    - test -d "lib/lua-$LUA_VERSION/src" || exit 0
    - make install
  - name: linux-xenial-gcc-qt5
    os: linux
    env: HINTS=linux-qt5 LUA_VERSION=5.3.5
    compiler: gcc
    addons:
      apt:
        packages:
        - libx11-dev
        - libxaw7-dev
        - xfonts-utils
        - qtbase5-dev
        - qtmultimedia5-dev
        - qtbase5-dev-tools
    script:
    - cd sys/unix/ && sh setup.sh hints/$HINTS && cd ../../
    - make fetch-lua
    - test -d "lib/lua-$LUA_VERSION/src" || exit 0
    - make QT_SELECT=5 MOC=moc install
  - name: linux-bionic-gcc-x11
    os: linux
    env: HINTS=linux-x11 LUA_VERSION=5.3.5
    dist: bionic
    compiler: gcc
    addons:
      apt:
        packages:
        - libx11-dev
        - libxaw7-dev
        - xfonts-utils
    script:
    - cd sys/unix/ && sh setup.sh hints/$HINTS && cd ../../
    - make fetch-lua
    - test -d "lib/lua-$LUA_VERSION/src" || exit 0
    - make install
  - name: linux-xenial-gcc-minimal
    os: linux
    env: HINTS=linux-minimal LUA_VERSION=5.3.5
    compiler: gcc
    script: |
      cd sys/unix/ && sh setup.sh hints/$HINTS && cd ../../
      sed -i '/^#define CLIPPING/d'       include/config.h
      sed -i '/^#define COMPRESS/d'       include/config.h
      #sed -i '/^#define DOAGAIN/d'        include/config.h
      sed -i '/^#define DUMPLOG/d'        include/config.h
      #sed -i '/^#define GDBPATH/d'        include/config.h
      #sed -i '/^#define GREPPATH/d'       include/config.h
      sed -i '/^#define INSURANCE/d'      include/config.h
      sed -i '/^#define LOGFILE/d'        include/config.h
      sed -i '/^#define NEWS/d'           include/config.h
      sed -i '/^#define PANICLOG/d'       include/config.h
      #sed -i '/^#define STATUS_HILITES/d' include/config.h
      sed -i '/^#define SYSCF/d'          include/config.h
      sed -i '/^#define USER_SOUNDS/d'    include/config.h
      sed -i '/^#define XLOGFILE/d'       include/config.h

      sed -i '/^#define MAIL/d'           include/unixconf.h
      sed -i '/^#define SHELL/d'          include/unixconf.h
      sed -i '/^#define SUSPEND/d'        include/unixconf.h
      sed -i 's/^#define TEXTCOLOR//'     include/unixconf.h
      make fetch-lua
      test -d "lib/lua-$LUA_VERSION/src" || exit 0
      make install
      cat dat/options
  - name: windows-visualstudio
    os: windows
    language: shell
    script:
    - "./win/win32/vs2017/travisci.sh"
  #- name: windows-mingw
  #  os: windows
  #  script:
  #  - export ADD_CURSES=Y
  #  - export PDCURSES_TOP=../lib/pdcurses
  #  - export LUA_VERSION=5.3.5
  #  - export SKIP_NETHACKW=N
  #  - sh sys/winnt/travis-gcc.sh
  #  - test -d "lib/lua-$LUA_VERSION/src" || exit 0
  #  - test -d "lib/pdcurses" || exit 0
  #  - cd src
  #  - cp ../sys/winnt/Makefile.gcc ./Makefile
  #  - mingw32-make install
  - name: msdos crosscompile on linux
    os: linux
    env: HINTS=linux LUA_VERSION=5.3.5
    compiler: gcc
    script:
    - cd sys/unix/ && sh setup.sh hints/$HINTS && cd ../../
    - make fetch-lua
    - test -d "lib/lua-$LUA_VERSION/src" || exit 0
    - cd lib/lua-$LUA_VERSION/src && make a && cd ../../..
    - sh sys/msdos/msdos-cross-compile.sh
  exclude:
  - os: osx
    osx_image: xcode10.2
    env: HINTS=macosx10.14
    compiler: clang
    script: cd sys/unix/ && sh setup.sh hints/$HINTS && cd ../../ && make install
deploy:
  provider: releases
  api_key:
    secure: Gs0TA/wHdlMkzdMh/a6zZ1b43uHqu7d/gVjqpknsdXoAnsfcgTeSDRaqjrW7UHcMFF9/z+JljqZsOLvIzLRQaevW8ssZDdhtb0T7kMPyVV5Fye+6bb6lFXhVilcTw50Y5VSSBtKSvW6OVRBguGtRlvuu3WZ/+iAtBVzsiuRhWkO0LxD1eXXXOyaWHl4Cn2a2WaPAYu8DxlFIwNCj6mWLVaxHTB8GgMdr6pYHNTv5PUIn3ZWHPkexj4zZ3h24njE/WR15FQ6V8pMhl3xbfXX+Vht9yJGpdRjd832LACXD7lYjp3LaKfEVNiPnSDTWSLAwe3S/RaIC2Qdfh8EnN9tg15w3kvWeQ/I9u3S5Nb4yEzfNmIYK6H7K7X1MxOIQvZAbxv5Xha2EZnzLlvrDu4oxyPIQrPsW0KVakRTRm1nxSys17R0Ox5z6A/NFk1JtWruvCBEzGfJEsQGrlnC0xeipGInaqIU6iV+qd8ZFV2bLDQHCS7DNHsnf9iywCKKE3FtCiWom5yz59n09Fe1h5FNZlpCnZeG2l9BkqyrrXLqOmG0jOZMVhBk0xPRJcgmKQELnt9gEup08+Y91/tCxOxIy7tbmvBS/vhVkj0IdwnHNJwMOuj6uJH/n/A8WJYLvj8I0IRP07Ta4JzpEUQumZpnzKIMBYpBRsYyv8fD+j/K8SKA=
  file_glob: true
  file:
    - "$TRAVIS_TAG.x86.zip"
  skip_cleanup: true
  on:
    tags: true
  prerelease: true
  name: "Test release build of SpliceHack 0.7.1"
  body: "This is an auto generated test release build of SpliceHack 0.7.1"
